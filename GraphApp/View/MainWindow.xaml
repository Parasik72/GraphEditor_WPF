<Window x:Class="GraphApp.View.MainWindow"
        WindowStyle="None"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GraphApp"
        xmlns:vm="clr-namespace:GraphApp.ViewModel"
        xmlns:s="clr-namespace:GraphApp.Controls"
        xmlns:md="clr-namespace:GraphApp.Model"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Background="Transparent"
        BorderBrush="#383838"
        BorderThickness="1 1 1 1"
        Title="Graph App" 
        MinHeight="450" 
        MinWidth="800"
        Height="450"
        Width="800"
        WindowState="{Binding WindowStateVar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        ResizeMode="{Binding ResizeModeVar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="#383838" Points="3,15 15,15 9,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="#383838" Points="3,3 9,15 15,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="#383838" Margin="2"></Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
        </Style>
        <DataTemplate DataType="{x:Type md:Node}">
            <s:MoveThumb>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding MouseUp}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <s:MoveThumb.Template>
                    <ControlTemplate>
                        <Grid x:Name="NodeGrid"
                            Width="35"
                            Height="35">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding deleteNode}"
                                                           CommandParameter="{Binding ElementName=NodeGrid}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Ellipse Fill="#535353"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Width="35" 
                                     Height="35"
                                     StrokeThickness="2"
                                     Stroke="#383838">
                                <Ellipse.Resources>
                                    <local:EllipseVisibilityConverter x:Key="EllipseSelected"/>
                                </Ellipse.Resources>
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EllipseSelected}}" Value="False">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EllipseSelected}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                                <Ellipse.Effect>
                                    <DropShadowEffect Direction="0"
                                                      Color="{Binding BSelected.Value}"
                                                      ShadowDepth="0"
                                                      BlurRadius="{Binding blurRadius}"/>
                                </Ellipse.Effect>
                            </Ellipse>
                            <Ellipse Fill="#535353"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Width="35" 
                                     Height="35"
                                     StrokeThickness="2"
                                     Stroke="#383838">
                                <Ellipse.Resources>
                                    <local:EllipseVisibilityConverter x:Key="EllipseSelected"/>
                                </Ellipse.Resources>
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EllipseSelected}}" Value="True">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EllipseSelected}}" Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Label Content="{Binding Name}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" 
                                   FontSize="16"
                                   Margin="0 -4 0 0"
                                   Foreground="#BBB"/>
                        </Grid>
                    </ControlTemplate>
                </s:MoveThumb.Template>
            </s:MoveThumb>
        </DataTemplate>
        <Style TargetType="Button" x:Key="defaultBtn">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="#535353"/>
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="BorderBrush" Value="#535353"/>
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#474747" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="#606060" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="menuParentStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="#535353"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Consolas" />
            <Setter Property="Cursor" Value="Hand"/>
        </Style>
        <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" 
                    Value="#535353"/>
            <Setter Property="Foreground" 
                    Value="White"/>
            <Setter Property="BorderThickness" 
                    Value="0"/>
            <Setter Property="Template" 
                    Value="{DynamicResource MenuItemControlTemplate1}"/>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate1" 
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot"
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True"
                    BorderThickness="0 0 0 1"
                    BorderBrush="#383838">
                <Grid Margin="5"
                      Width="Auto">
                    <ContentPresenter x:Name="menuHeaderContainer" 
                                      Grid.Column="2" 
                                      ContentSource="Header" 
                                      HorizontalAlignment="Left" 
                                      VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" 
                         Value="True">
                    <Setter Property="Background" 
                            TargetName="templateRoot" 
                            Value="#474747"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" 
                                   Value="True"/>
                        <Condition Property="IsEnabled" 
                                   Value="False"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MenuItemControlTemplate2" 
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <ContentPresenter Grid.Column="1" 
                                      ContentSource="Header" 
                                      Margin="{TemplateBinding Padding}"/>
                    <Popup x:Name="PART_Popup" 
                           AllowsTransparency="True" 
                           Focusable="False" 
                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Border x:Name="SubMenuBorder" 
                                BorderBrush="#383838" 
                                BorderThickness="1" 
                                Background="#474747"
                                Cursor="Hand">
                            <ScrollViewer x:Name="SubMenuScrollViewer" 
                                          Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <ItemsPresenter/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" 
                         Value="True">
                    <Setter Property="PopupAnimation" 
                            TargetName="PART_Popup" 
                            Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" 
                         Value="True">
                    <Setter Property="Background" 
                            TargetName="templateRoot" 
                            Value="#474747"/>
                    <Setter Property="BorderBrush" 
                            TargetName="templateRoot" 
                            Value="#606060"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="0 5" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="BorderListBoxItem"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding ChangeModeListItem}"
                                                           CommandParameter="{Binding ElementName=BorderListBoxItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#474747" />
                                <Setter Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True" >
                                <Setter Property="Background" Value="#474747" />
                                <Setter Property="BorderBrush" Value="#606060" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="listBtn" BasedOn="{StaticResource defaultBtn}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Width" Value="30" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding undoCommand}"
              Gesture="CTRL+Z" />
        <KeyBinding Command="{Binding redoCommand}"
              Gesture="CTRL+Y" />
        <KeyBinding Command="{Binding selectModeHotKeyCommand}"
                    CommandParameter="0"
                    Gesture="CTRL+1"/>
        <KeyBinding Command="{Binding selectModeHotKeyCommand}"
                    CommandParameter="1"
                    Gesture="CTRL+2"/>
        <KeyBinding Command="{Binding selectModeHotKeyCommand}"
                    CommandParameter="2"
                    Gesture="CTRL+3"/>
        <KeyBinding Command="{Binding selectModeHotKeyCommand}"
                    CommandParameter="3"
                    Gesture="CTRL+4"/>
        <KeyBinding Command="{Binding selectModeHotKeyCommand}"
                    CommandParameter="4"
                    Gesture="CTRL+5"/>
        <KeyBinding Command="{Binding newGraphCommand}"
                    Gesture="CTRL+N"/>
        <KeyBinding Command="{Binding saveAsGraphCommand}"
                    Gesture="F12"/>
        <KeyBinding Command="{Binding saveGraphCommand}"
                    Gesture="CTRL+S"/>
        <KeyBinding Command="{Binding loadGraphCommand}"
                    Gesture="CTRL+O"/>
        <KeyBinding Command="{Binding changeGraphOrientedCommand}"
                    Gesture="CTRL+B"/>
    </Window.InputBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Background="#535353"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                BorderThickness="0,0,0,1"
                BorderBrush="#383838"
                Panel.ZIndex="1"
                MouseDown="windowMove">
        </Border>
        <Border Background="#535353"
                Grid.Row="1"
                Grid.RowSpan="2"
                BorderThickness="0,0,1,0"
                BorderBrush="#383838">
        </Border>
        <Grid Background="#474747"
              Grid.Row="1"
              Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="188"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" 
                  Grid.ColumnSpan="1">
                <Border Background="#fff"
                        Margin="10,10,10,10"
                        CornerRadius="4">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding canvasClickCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid>
                        <ItemsControl ItemsSource="{Binding Workspace.Edges}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas ClipToBounds="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Canvas.Left" Value="0"/>
                                    <Setter Property="Canvas.Top" Value="0"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="EdgeGrid">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding deleteEdge}"
                                                                       CommandParameter="{Binding ElementName=EdgeGrid}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Path Stroke="#383838" 
                                              StrokeThickness="3">
                                            <Path.Resources>
                                                <local:EllipseVisibilityConverter x:Key="PathSelected"/>
                                            </Path.Resources>
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PathSelected}}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PathSelected}}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                            <Path.Effect>
                                                <DropShadowEffect Direction="0"
                                                      Color="{Binding BSelected.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      ShadowDepth="0"
                                                      BlurRadius="{Binding blurRadius, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </Path.Effect>
                                            <Path.Data>
                                                <PathGeometry>
                                                    <PathGeometry.Figures>
                                                        <PathFigure StartPoint="{Binding lineFrom,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                            <LineSegment Point="{Binding lineTo,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </PathFigure>
                                                    </PathGeometry.Figures>
                                                </PathGeometry>
                                            </Path.Data>
                                        </Path>
                                        <Path Stroke="#383838" 
                                              StrokeThickness="3">
                                            <Path.Resources>
                                                <local:EllipseVisibilityConverter x:Key="PathSelected"/>
                                            </Path.Resources>
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PathSelected}}" Value="True">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PathSelected}}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                            <Path.Data>
                                                <PathGeometry>
                                                    <PathGeometry.Figures>
                                                        <PathFigure StartPoint="{Binding lineFrom,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                            <LineSegment Point="{Binding lineTo,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                        </PathFigure>
                                                    </PathGeometry.Figures>
                                                </PathGeometry>
                                            </Path.Data>
                                        </Path>
                                        <Polygon Points="{Binding lineFromTrianglePosTo}"
                                                     Fill="#383838"
                                                     Visibility="{Binding visibilityTriangleTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <Polygon.Resources>
                                                <local:EllipseVisibilityConverter x:Key="PolygonSelected1"/>
                                            </Polygon.Resources>
                                            <Polygon.Style>
                                                <Style TargetType="Polygon">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected1}}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected1}}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Polygon.Style>
                                            <Polygon.Effect>
                                                <DropShadowEffect Direction="0"
                                                      Color="{Binding BSelected.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      ShadowDepth="0"
                                                      BlurRadius="{Binding blurRadius, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </Polygon.Effect>
                                        </Polygon>
                                        <Polygon Points="{Binding lineFromTrianglePosTo}"
                                                     Fill="#383838"
                                                     Visibility="{Binding visibilityTriangleTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <Polygon.Resources>
                                                <local:EllipseVisibilityConverter x:Key="PolygonSelected1"/>
                                            </Polygon.Resources>
                                            <Polygon.Style>
                                                <Style TargetType="Polygon">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected1}}" Value="True">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected1}}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Polygon.Style>
                                        </Polygon>
                                        <Polygon Points="{Binding lineFromTrianglePosFrom}"
                                                     Fill="#383838"
                                                     Visibility="{Binding visibilityTriangleFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <Polygon.Resources>
                                                <local:EllipseVisibilityConverter x:Key="PolygonSelected2"/>
                                            </Polygon.Resources>
                                            <Polygon.Style>
                                                <Style TargetType="Polygon">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected2}}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected2}}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Polygon.Style>
                                            <Polygon.Effect>
                                                <DropShadowEffect Direction="0"
                                                      Color="{Binding BSelected.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      ShadowDepth="0"
                                                      BlurRadius="{Binding blurRadius, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </Polygon.Effect>
                                        </Polygon>
                                        <Polygon Points="{Binding lineFromTrianglePosFrom}"
                                                     Fill="#383838"
                                                     Visibility="{Binding visibilityTriangleFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <Polygon.Resources>
                                                <local:EllipseVisibilityConverter x:Key="PolygonSelected2"/>
                                            </Polygon.Resources>
                                            <Polygon.Style>
                                                <Style TargetType="Polygon">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected2}}" Value="True">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding BSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PolygonSelected2}}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Polygon.Style>
                                        </Polygon>
                                        <Border Margin="{Binding weightPosition}"
                                                Width="24"
                                                Height="24"
                                                Background="#535353"
                                                BorderBrush="#383838"
                                                BorderThickness="2">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="0"
                                                      Color="{Binding BSelected.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      ShadowDepth="0"
                                                      BlurRadius="{Binding blurRadius, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </Border.Effect>
                                            <TextBlock Text="{Binding Weight}" 
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Foreground="#BBB"/>
                                        </Border>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ItemsControl ItemsSource="{Binding Workspace.Nodes, Mode=TwoWay}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True"
                                            Width="Auto"
                                            ClipToBounds="True">
                                        <i:Interaction.Behaviors>
                                            <local:MouseBehaviour MouseX="{Binding PanelX, Mode=OneWayToSource}"
                                                                  MouseY="{Binding PanelY, Mode=OneWayToSource}" />
                                        </i:Interaction.Behaviors>
                                        <Canvas.Resources>
                                            <local:BackgorundConverter x:Key="BackgorundCheckConverter"/>
                                        </Canvas.Resources>
                                        <Canvas.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding BackgroundCanvas, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BackgorundCheckConverter}}" Value="False">
                                                        <Setter Property="Canvas.Background" Value="{x:Null}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding BackgroundCanvas, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BackgorundCheckConverter}}" Value="True">
                                                        <Setter Property="Canvas.Background" Value="Transparent" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Canvas.Style>
                                    </Canvas>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemContainerStyle>
                                <Style>
                                    <Setter Property="Canvas.Left" Value="{Binding PositionX}"/>
                                    <Setter Property="Canvas.Top" Value="{Binding PositionY}"/>
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </ItemsControl>
                        <Grid>
                            <Grid.Resources>
                                <local:GraphOrientedConverter x:Key="DFSShow" />
                            </Grid.Resources>
                            <Grid.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DfsResShow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DFSShow}}" Value="True">
                                            <Setter Property="Grid.Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding DfsResShow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DFSShow}}" Value="False">
                                            <Setter Property="Grid.Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Border CornerRadius="2"
                                Background="#535353"
                                BorderThickness="1"
                                BorderBrush="#383838"
                                Width="300"
                                Height="200">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="35"/>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="35"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding SelectedAlgorithm.First, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   FontSize="16"
                                                   FontFamily="Consolas"
                                                   Foreground="#fff"
                                                   Margin="10 8 0 0"/>
                                        <Button Grid.Column="1"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Cursor="Hand"
                                                Style="{StaticResource defaultBtn}"
                                                Width="25"
                                                Height="25"
                                                Command="{Binding closeAlgorithmWindowCommand}">
                                            <Path Stroke="#383838" 
                                                  StrokeThickness="2"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathGeometry.Figures>
                                                            <PathFigure StartPoint="0,0">
                                                                <LineSegment Point="15,15"/>
                                                            </PathFigure>
                                                            <PathFigure StartPoint="0,15">
                                                                <LineSegment Point="15,0"/>
                                                            </PathFigure>
                                                        </PathGeometry.Figures>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Button>
                                    </Grid>
                                    <Grid Grid.Row="1">
                                        <TextBlock Text="{Binding SelectedAlgorithm.Second, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   FontSize="16"
                                                   FontFamily="Consolas"
                                                   Foreground="#fff"
                                                   Margin="10 8 0 0"
                                                   TextWrapping="Wrap"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
            <Border Background="#535353"
                    Grid.Column="2"
                    BorderThickness="1 0 0 0"
                    BorderBrush="#383838">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45 "/>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0"
                            BorderThickness="0 0 0 1"
                            BorderBrush="#383838">
                        <TextBlock Text="Properties"
                                   Foreground="#fff"
                                   FontSize="20"
                                   FontFamily="Consolas"
                                   VerticalAlignment="Center"
                                   Margin="8 0 0 0"/>
                    </Border>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" 
                              Margin="10 0">
                            <TextBlock 
                               Text="{Binding SelectedNode.ElementType}" 
                               Foreground="#fff"
                               FontSize="20"
                               FontFamily="Consolas"
                               Margin="8 8 0 0"
                               VerticalAlignment="Center"/>
                        </Grid>
                        <Border Grid.Row="1"
                                BorderThickness="1"
                                BorderBrush="#383838"
                                Margin="10">
                            <Border.Resources>
                                <local:NullConverter x:Key="NullToVisibilityConverter"/>
                            </Border.Resources>
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedNode, Converter={StaticResource NullToVisibilityConverter}}" Value="True">
                                            <Setter Property="Border.Width" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0"
                                        BorderThickness="0 0 0 1"
                                        BorderBrush="#4A4A4A">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"
                                                   Text="Name: " 
                                                   Foreground="#fff"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   Margin="8 0 0 0"
                                                   VerticalAlignment="Center"/>
                                        <TextBox Grid.Column="1"
                                                   Text="{Binding SelectedNode.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   Foreground="#fff"
                                                   Background="#535353"
                                                   BorderThickness="0"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   Margin="8 0 0 0"
                                                   VerticalAlignment="Center"
                                                   MaxLength="3"/>
                                    </Grid>
                                </Border>
                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Edges: " 
                                               Foreground="#fff"
                                               FontSize="20"
                                               FontFamily="Consolas"
                                               Margin="8 0 0 0"
                                               VerticalAlignment="Center"/>
                                    <DockPanel Grid.Row="1">
                                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding SelectedNode.ConnectedNodes}"
                                                  Background="#535353"
                                                  BorderThickness="0">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="55"/>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Grid.Column="0" 
                                                               Text="{Binding Second, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                               Margin="10"
                                                               Foreground="#fff"
                                                               FontSize="16"
                                                               FontFamily="Consolas"/>
                                                            <TextBlock Grid.Column="1" 
                                                               Text="{Binding First.Name}"
                                                               Margin="0 10 0 0"
                                                               Foreground="#fff"
                                                               FontSize="16"
                                                               FontFamily="Consolas"
                                                               Width="30"/>
                                                            <Grid Grid.Column="2" >
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="20"/>
                                                                    <ColumnDefinition />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0"
                                                                           Text="W:"
                                                                           Margin="0 10 0 0"
                                                                           Foreground="#fff"
                                                                           FontSize="16"
                                                                           FontFamily="Consolas"/>
                                                                <TextBlock Grid.Column="1"
                                                                           Text="{Binding Third}"
                                                                           Margin="0 10 0 0"
                                                                           Foreground="#fff"
                                                                           FontSize="16"
                                                                           FontFamily="Consolas"/>
                                                            </Grid>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </DockPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" 
                              Margin="10 0">
                            <TextBlock 
                               Text="{Binding SelectedEdge.ElementType}" 
                               Foreground="#fff"
                               FontSize="20"
                               FontFamily="Consolas"
                               Margin="8 8 0 0"
                               VerticalAlignment="Center"/>
                        </Grid>
                        <Border Grid.Row="1"
                                BorderThickness="1"
                                BorderBrush="#383838"
                                Margin="10">
                            <Border.Resources>
                                <local:NullConverter x:Key="NullToVisibilityConverter"/>
                            </Border.Resources>
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedEdge, Converter={StaticResource NullToVisibilityConverter}}" Value="True">
                                            <Setter Property="Border.Width" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="70"/>
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0"
                                        BorderThickness="0 0 0 1"
                                        BorderBrush="#4A4A4A">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"
                                                   Text="Weight: " 
                                                   Foreground="#fff"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   Margin="8 0 0 0"
                                                   VerticalAlignment="Center"/>
                                        <TextBox Grid.Column="1"
                                                   Text="{Binding SelectedEdge.Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   Foreground="#fff"
                                                   Background="#535353"
                                                   BorderThickness="0"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   Margin="8 0 0 0"
                                                   VerticalAlignment="Center"
                                                   MaxLength="3"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="1"
                                        BorderThickness="0 0 0 1"
                                        BorderBrush="#4A4A4A">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0"
                                                   Grid.ColumnSpan="3"
                                                   Grid.Row="0"
                                                   Text="Direction: " 
                                                   Foreground="#fff"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   VerticalAlignment="Center"
                                                   Margin="8 0 0 0"/>
                                        <TextBlock Grid.Column="0"
                                                   Grid.Row="1"
                                                   Text="{Binding SelectedEdge.FromNode.Name, UpdateSourceTrigger=PropertyChanged}" 
                                                   Foreground="#fff"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   Margin="-8 0 0 0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"/>
                                        <TextBlock Grid.Column="1"
                                                   Grid.Row="1"
                                                   Text="{Binding SelectedEdge.ForItem1.Second, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   Foreground="#fff"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   Margin="8 0 0 0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"/>
                                        <TextBlock Grid.Column="2"
                                                   Grid.Row="1"
                                                   Text="{Binding SelectedEdge.ToNode.Name, UpdateSourceTrigger=PropertyChanged}" 
                                                   Foreground="#fff"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   Margin="8 0 0 0"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="2"
                                        BorderThickness="0 0 0 1"
                                        BorderBrush="#4A4A4A">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0"
                                                   Text="Change Dir: " 
                                                   Foreground="#fff"
                                                   Margin="8 0 0 0"
                                                   FontSize="20"
                                                   FontFamily="Consolas"
                                                   VerticalAlignment="Center"/>
                                        <Button Grid.Row="1"
                                                Content="{Binding SelectedEdge.ForItem1.Second, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                Foreground="#fff"
                                                FontSize="20"
                                                FontFamily="Consolas"
                                                Style="{StaticResource defaultBtn}"
                                                Command="{Binding changeEdgeDirectionCommand}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Column="0"
              Grid.ColumnSpan="2"
              Panel.ZIndex="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="140"/>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
            <Menu Background="#535353"
                  Height="38"
                  Grid.Column="1">
                <MenuItem Header="File"
                          Width="110"
                          Height="38"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Style="{StaticResource menuParentStyle}"
                          ItemContainerStyle="{DynamicResource MenuItemStyle1}" 
                          Template="{DynamicResource MenuItemControlTemplate2}">
                    <MenuItem Header="New"
                              Command="{Binding newGraphCommand}"/>
                    <MenuItem Header="Open"
                              Command="{Binding loadGraphCommand}"/>
                    <MenuItem Header="Save"
                              Command="{Binding saveGraphCommand}"/>
                    <MenuItem Header="Save as"
                              Command="{Binding saveAsGraphCommand}"/>
                </MenuItem>
            </Menu>
            <Menu Background="#535353"
                  Height="38"
                  Grid.Column="2">
                <MenuItem Header="Algorithms"
                          Width="140"
                          Height="38"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Style="{StaticResource menuParentStyle}"
                          ItemContainerStyle="{DynamicResource MenuItemStyle1}" 
                          Template="{DynamicResource MenuItemControlTemplate2}" Cursor="Hand">
                    <MenuItem Header="DFS"
                              Command="{Binding dfsCommand}"/>
                </MenuItem>
            </Menu>
            <Button Content="Help"
                    Grid.Column="3"
                    Style="{StaticResource defaultBtn}"
                    Command="{Binding helpCommand}"/>
            <TextBlock Grid.Column ="4"
                       Text="{Binding GraphFile.FileNameApp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Foreground="#D3D3D3"
                       FontSize="16"
                       FontFamily="Consolas"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Margin="20 0 0 0"/>
            <Button  Grid.Column="5  "
                    Style="{StaticResource defaultBtn}"
                    Command="{Binding minimizeWindowCommand}">
                <Canvas Height="15"  Width="15">
                    <Path Stroke="#383838" StrokeThickness="2">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <PathFigure StartPoint="0,15">
                                        <LineSegment Point="15,15"/>
                                    </PathFigure>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </Button>
            <Button Grid.Column="6"
                    Style="{StaticResource defaultBtn}"
                    Command="{Binding normalMaxWindowCommand}" 
                    Cursor="Hand" >
                <Canvas Height="15"  
                        Width="15">
                    <Path Stroke="#383838" 
                          StrokeThickness="1">
                        <Path.Resources>
                            <local:GraphOrientedConverter x:Key="WindowStateNormal"/>
                        </Path.Resources>
                        <Path.Style>
                            <Style TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding windowStateIcon,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource WindowStateNormal}}" Value="False">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding windowStateIcon,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource WindowStateNormal}}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <PathFigure StartPoint="0,2">
                                        <LineSegment Point="12,2 "/>
                                        <LineSegment Point="12 ,15"/>
                                        <LineSegment Point="0,15"/>
                                        <LineSegment Point="0,1.5"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="2,2">
                                        <LineSegment Point="2,0"/>
                                        <LineSegment Point="14,0"/>
                                        <LineSegment Point="14,12"/>
                                        <LineSegment Point="12,12"/>
                                    </PathFigure>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <Path Stroke="#383838" 
                          StrokeThickness="1">
                        <Path.Resources>
                            <local:GraphOrientedConverter x:Key="WindowStateMaximized"/>
                        </Path.Resources>
                        <Path.Style>
                            <Style TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding windowStateIcon,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource WindowStateMaximized}}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding windowStateIcon,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource WindowStateMaximized}}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="15,0 "/>
                                        <LineSegment Point="15 ,15"/>
                                        <LineSegment Point="0,15"/>
                                        <LineSegment Point="0,-0.5"/>
                                    </PathFigure>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </Button>
            <Button FontSize="16"
                    Grid.Column="7"
                    Style="{StaticResource defaultBtn}"
                    Command="{Binding appShutdownCommand}">
                <Canvas Height="15"  Width="15">
                    <Path Stroke="#383838" StrokeThickness="2">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="15,15"/>
                                    </PathFigure>
                                    <PathFigure StartPoint="0,15">
                                        <LineSegment Point="15,0"/>
                                    </PathFigure>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </Button>
        </Grid>
        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Margin="0 5 0 5">
            <Grid.RowDefinitions>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition Height="45"/>
                <RowDefinition />
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>
            <ListBox Grid.RowSpan="5"
                     ItemsSource="{Binding ModeBtns}"
                     SelectedItem="{Binding SelectedMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Background="#535353"
                     BorderThickness="0"
                     Width="38">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Button Style="{StaticResource listBtn}"
                                ToolTip="{Binding ToolTip}"
                                Command="{Binding ChangeMode}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
                            <Image Source="{Binding ImgSource}"
                                   Stretch="Uniform"
                                   Width="28"
                                   Height="28"/>
                        </Button>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Button Grid.Row="6"
                    Style="{StaticResource defaultBtn}"
                    Margin="2 5 3 5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="38"
                    ToolTip="Graph mode"
                    Command="{Binding changeGraphOrientedCommand}">
                <Grid Height="32" Width="38">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"
                               FontFamily="Consolas"
                               Text="Oriented"
                               FontSize="8"
                               Foreground="#9a9a9a"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Bottom"
                               Width="36"
                               Margin="-1 0 0 0">
                    </TextBlock>
                    <Border Grid.Row="1"
                            BorderThickness="1"
                            BorderBrush="#383838"
                            CornerRadius="4"
                            Margin="1 3 3 3">
                        <Border.Resources>
                            <local:GraphOrientedConverter x:Key="GraphOrientedBackgroundConverter" />
                        </Border.Resources>
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding graphOriented, Converter={StaticResource GraphOrientedBackgroundConverter}}" Value="True">
                                        <Setter Property="Border.Background" Value="#009e60"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding graphOriented, Converter={StaticResource GraphOrientedBackgroundConverter}}" Value="False">
                                        <Setter Property="Border.Background" Value="#8b0000"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Border Background="#9a9a9a"
                                CornerRadius="4"
                                Width="8"
                                HorizontalAlignment="Left">
                                <Border.Resources>
                                    <local:GraphOrientedConverter x:Key="GraphOrientedConverter" />
                                </Border.Resources>
                                <Border.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding graphOriented, Converter={StaticResource GraphOrientedConverter}}" Value="True">
                                                <Setter Property="Border.Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding graphOriented, Converter={StaticResource GraphOrientedConverter}}" Value="False">
                                                <Setter Property="Border.Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <Border Background="#9a9a9a"
                                CornerRadius="4"
                                Width="8"
                                HorizontalAlignment="Right">
                                <Border.Resources>
                                    <local:GraphOrientedConverter x:Key="GraphOrientedConverter" />
                                </Border.Resources>
                                <Border.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding graphOriented, Converter={StaticResource GraphOrientedConverter}}" Value="False">
                                                <Setter Property="Border.Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding graphOriented, Converter={StaticResource GraphOrientedConverter}}" Value="True">
                                                <Setter Property="Border.Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>
            </Button>
        </Grid>
    </Grid>
</Window>